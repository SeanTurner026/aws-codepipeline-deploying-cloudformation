AWSTemplateFormatVersion: 2010-09-09

Description: codebuild project and codepipeline for aws codepipeline poc

Parameters:
  DockerUsername:
    Type: string
    Description: username for hub.docker
    Default: seanturner026

  DockerPassword:
    Type: string
    Description: password for hub.docker
    NoEcho: true

  Environment:
    Type: string
    Description: environment
    AllowedValues:
      - dev
      - prod
    Default: dev

  GitHubRepository:
    Type: string
    Description: github repository
    Default: aws-codepipeline-poc

  GithubBranch:
    Type: string
    Description: github branch
    Default: master

  GithubOwner:
    Type: string
    Description: github owner
    Default: SeanTurner026

  GithubToken:
    Type: string
    Description: github token for codepipeline
    NoEcho: true

Resources:
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        !Join: [
          "",
          [!Ref AWS::StackName, "-", "code-build-role", "-", !Ref Environment],
        ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        !Join: [
          "",
          [!Ref AWS::StackName, "-", "code-pipeline-role", "-", !Ref Environment],
        ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codepipeline.amazonaws.com"
          Action: "sts:AssumeRole"

  CodeBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        !Join: [
          "",
          [!Ref AWS::StackName, "-", "code-build-policy", "-", !Ref Environment],
        ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:FilterLogEvents
            - logs:DescribeLogStreams
            - logs:DeleteLogGroup
            - s3:putObject
            - s3:getObject
            - codebuild:*
            - cloudformation:List*
            - cloudformation:Get*
            - cloudformation:PreviewStackUpdate
            - cloudformation:ValidateTemplate
            - cloudformation:CreateStack
            - cloudformation:CreateUploadBucket
            - cloudformation:DeleteStack
            - cloudformation:Describe*
            - cloudformation:UpdateStack
            - lambda:Get*
            - lambda:List*
            - lambda:CreateFunction
            - lambda:AddPermission
            - lambda:CreateAlias
            - lambda:DeleteFunction
            - lambda:InvokeFunction
            - lambda:PublishVersion
            - lambda:RemovePermission
            - lambda:Update*
            - apigateway:GET
            - apigateway:POST
            - apigateway:PUT
            - apigateway:DELETE
            - s3:CreateBucket
            - s3:DeleteBucket
            - s3:ListBucket
            - s3:ListBucketVersions
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - iam:PassRole
            - kinesis:*
            - iam:GetRole
            - iam:CreateRole
            - iam:PutRolePolicy
            - iam:DeleteRolePolicy
            - iam:DeleteRole
            - cloudwatch:GetMetricStatistics
            - events:Put*
            - events:Remove*
            - events:Delete*
            - dynamodb:*
          Resource: "*"
      Roles:
        - !Ref CodeBuildRole

  CodePipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        !Join: [
          "",
          [!Ref AWS::StackName, "-", "code-pipeline-policy", "-", !Ref Environment],
        ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:putObject
            - s3:getObject
            - codebuild:*
          Resource:
            - "*"
      Roles:
        - !Ref CodePipelineRole

  S3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "aws-sean-consegna-codepipeline-poc"

  BuildPushJob:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: build-push-job
      Description: build and push docker containers to hub.docker
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            build:
              commands:
                - bash scripts/build-push.sh
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: !Ref Environment
          - Name: DOCKER_USERNAME
            Type: PLAINTEXT
            Value: !Ref DockerUsername
          - Name: DOCKER_PASSWORD
            Type: PLAINTEXT
            Value: !Ref DockerPassword
        Image: aws/codebuild/python:3.7
      Artifacts:
        Type: CODEPIPELINE

  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join ["", ["code-pipeline-poc", "-", !Ref "AWS::StackName"]]
      ArtifactStore:
        Location: !Ref S3
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn:
        !Join [
          "",
          [
            "arn:aws:iam::",
            !Ref "AWS::AccountId",
            ":role/",
            !Ref CodePipelineRole,
          ],
        ]
      Stages:
        - Name: checkout-source-code
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: true
                OAuthToken: !Ref GithubToken
              OutputArtifacts:
                - Name: source-code

        - Name:
          Actions:
            - Name: build-push-job
              RunOrder: 1
              InputArtifacts:
                - Name: source-code
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildPushJob
              OutputArtifacts:
                - Name: build-push-job
